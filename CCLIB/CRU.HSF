\ CRU support from TI-Forth, for CAMEL99   BJFOX 6FEB2018

\ Since CAMEL99 reserves R12 for CRU use I could factor out
\ setting R12 as separate word. This saves 24 bytes versus
\ the TI-Forth implementation.

\  HEX 1E00 2+ CRU! TB ( -- flag)

CROSS-ASSEMBLING

CODE: CRU! ( addr -- ) \ set the CRU base address for CRU words
\         TOS  TOS ADD,    \ multiply adr by 2  (removed. Most DOCS use real address)
         TOS R12 MOV,      \ load CRU adr to R12
         TOS POP,          \ refill TOS register
         NEXT,
         END-CODE

CODE: SBO ( -- )    \ you must set the CRU address first
         0 SBO,
         NEXT,
         END-CODE

CODE: SBZ ( -- )
         0 SBZ,
         NEXT,
         END-CODE

CODE: TB ( -- ? )
         TOS PUSH,  \ save current TOS register
         TOS CLR,
         0 TB,
         EQ IF,
            TOS SETO,
         ENDIF,
         NEXT,
         END-CODE

CODE: LDCR ( n1 n2 -- )
\ Performs a TMS9900 LDCR instruction. The value n1 is transferred 
\ to the CRU with a field width of n2 bits.
        *SP+   R0 MOV,
         TOS 000F ANDI,
         NE IF,
            TOS 8 CMPI,
            LTE IF,
                R0 SWPB,
            ENDIF,
         ENDIF,
         TOS 06 SLA,
         TOS 3000 ORI,
         TOS X,
         TOS POP,
         NEXT,
         END-CODE

CODE: STCR ( n1 --- n2 )
\ Performs the TMS9900 STCR instruction. The bit count is n1.
\ The CRU base is set first with CRU! The returned value is n2.
         TOS R1 MOV,   \ bit count->R1
         TOS CLR,      \ TOS will hold output bits
         R1 000F ANDI,
         R1 R2 MOV,
         R1 06 SLA,
         R1 3400 ORI,  \ create STCR instuction in R1
         R1 X,         \ execute instruction in R1
         R2 R2 MOV,
         NE IF,
            R2 08 CMPI,
            LTE IF,
                TOS SWPB,
            ENDIF,
         ENDIF,
         NEXT,
         END-CODE

[CC] .( CRU words loaded...)

\    : TEST   CRU!  BEGIN  TB .  ?TERMINAL UNTIL ;
\    : CRU@   CRU!  BEGIN  8 STCR .   ?TERMINAL UNTIL ;
