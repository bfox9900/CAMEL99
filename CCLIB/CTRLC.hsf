\ Fast control C reader

\ Using KSCAN takes  36 ticks in ITC Forth. ( 770 uS)
\ ^C? takes only 10 ticks.                  ( 213 uS)

\  R1     TB 0    TB 1    TB 2    TB 3    TB 4    TB 5    TB 6    TB 7
\ ---------------------------------------------------------------------
\ 0000    =       space   enter           fctn    shift   ctrl
\ 0100    .       L       O       9       2       S       W       X
\ 0200    ,       K       I       8       3       D       E       C
\ 0300    M       J       U       7       4       F       R       V
\ 0400    N       H       Y       6       5       G       T       B
\ 0500    /       ;       P       0       1       A       Q       Z
\ 0600    Fire1   Left1   Right1  Down1   Up1
\ 0700    Fire2   Left2   Right2  Down2   Up2
\ ---------------------------------------------------------------------
[CC] HEX
CROSS-ASSEMBLING
CODE: ^C? ( -- ?) \ fast check if ctrl C key pressed
           TOS        PUSH,     \ make room in TOS register
           TOS        CLR,      \ TOS will accumulate keyboard bits
           R1         CLR,      \ R1 is column to read ie: 0
@@1:       R12  0024  LI,       \ set CRU address for column select chip
           R1   3     LDCR,     \ Set 3 bits of column
           R2         SETO,     \ R2 gets the bits. set all bits to 1
           R12  0006  LI,       \ R12-address to read rows
           R2   8     STCR,     \ store 8 column values (bits)->R2
           R2         INV,      \ outputs are low active so flip bits
           R2  TOS    ADD,      \ collect all the bits in TOS (R4)
           R1 0100    ADDI,     \ advance to next row
           R1 0300    CMPI,     \ are we at row 3?
           @@1        JNE,      \ if not jump back
           SCRTO @@   CLR,      \ Reset TI system screen timeout counter
           TOS C000   CMPI,     \ look for ctrl 'C'. sets 2 bits
           @@2        JEQ,      \ ^C was pressed
           TOS        CLR,      \ no ^C, clear TOS, return to forth
           NEXT,

@@2:       TOS        SETO,     \ set TOS to -1 (Forth true flag)
           NEXT,                \ return to Forth
           END-CODE

\ : ^CTEST   BEGIN  ^C? DUP .  UNTIL  ;

